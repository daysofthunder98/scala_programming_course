[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jprut\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jprut\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.3 (Oracle Corporation Java 14.0.1)
[debug]       Load.loadUnit: plugins took 135.7814ms
[debug]       Load.loadUnit: defsScala took 0.4845ms
[debug] [Loading] Scanning directory C:\Users\jprut\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jprut\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.8052 ms
[debug]           Load.resolveProject(global-plugins) took 57.6881ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\jprut\.sbt\1.0\plugins, plugins: List(<none>))) took 111.3604ms
[debug] [Loading] Done in C:\Users\jprut\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 143.6522ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3384ms
[debug]     Load.loadUnit(file:/C:/Users/jprut/.sbt/1.0/plugins/, ...) took 292.1546ms
[debug]   Load.apply: load took 494.8463ms
[debug]   Load.apply: resolveProjects took 9.6689ms
[debug]   Load.apply: finalTransforms took 91.5238ms
[debug]   Load.apply: config.delegates took 11.0443ms
[debug]   Load.apply: Def.make(settings)... took 873.752ms
[debug]   Load.apply: structureIndex took 370.2766ms
[debug]   Load.apply: mkStreams took 2.5716ms
[info] loading global plugins from C:\Users\jprut\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 33760.7801ms
[debug]           Load.loadUnit: plugins took 88.0033ms
[debug]           Load.loadUnit: defsScala took 0.0084ms
[debug] [Loading] Scanning directory C:\Users\jprut\Desktop\scala_programming_course\Week1\fireworks\project
[debug]             Load.loadUnit: mkEval took 10.3587ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jprut\Desktop\scala_programming_course\Week1\fireworks\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2292 ms
[info] loading settings for project fireworks-build from buildSettings.sbt,plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(fireworks-build) took 5.6553ms
[debug]             Load.loadTransitive: finalizeProject(Project(id fireworks-build, base: C:\Users\jprut\Desktop\scala_programming_course\Week1\fireworks\project, plugins: List(<none>))) took 10.0399ms
[debug] [Loading] Done in C:\Users\jprut\Desktop\scala_programming_course\Week1\fireworks\project, returning: (fireworks-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7196.3174ms
[debug]           Load.loadUnit: cleanEvalClasses took 79.4491ms
[debug]         Load.loadUnit(file:/C:/Users/jprut/Desktop/scala_programming_course/Week1/fireworks/project/, ...) took 7366.2682ms
[debug]       Load.apply: load took 7370.5883ms
[debug]       Load.apply: resolveProjects took 0.1953ms
[debug]       Load.apply: finalTransforms took 43.0196ms
[debug]       Load.apply: config.delegates took 15.5315ms
[debug]       Load.apply: Def.make(settings)... took 310.0826ms
[debug]       Load.apply: structureIndex took 65.6184ms
[debug]       Load.apply: mkStreams took 0.0043ms
[info] loading project definition from C:\Users\jprut\Desktop\scala_programming_course\Week1\fireworks\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 13235.5058ms
[debug]     Load.loadUnit: defsScala took 0.0079ms
[debug] [Loading] Scanning directory C:\Users\jprut\Desktop\scala_programming_course\Week1\fireworks
[debug]       Load.loadUnit: mkEval took 0.731ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jprut\Desktop\scala_programming_course\Week1\fireworks, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(ch.epfl.lamp.StudentTasks), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(ch.epfl.lamp.MOOCSettings),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(ch.epfl.lamp.StudentTasks),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(ch.epfl.lamp.StudentTasks),Set(Atom(ch.epfl.lamp.MOOCSettings)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,ch.epfl.lamp.StudentTasks,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,ch.epfl.lamp.MOOCSettings,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,scalafix.sbt.ScalafixPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5471 ms
[info] loading settings for project fireworks from assignment.sbt,build.sbt ...
[debug]         Load.resolveProject(fireworks) took 74.0762ms
[debug]       Load.loadTransitive: finalizeProject(Project(id fireworks, base: C:\Users\jprut\Desktop\scala_programming_course\Week1\fireworks, plugins: List(<none>))) took 80.8108ms
[debug] [Loading] Done in C:\Users\jprut\Desktop\scala_programming_course\Week1\fireworks, returning: (fireworks)
[debug]     Load.loadUnit: loadedProjectsRaw took 4399.5688ms
[debug]     Load.loadUnit: cleanEvalClasses took 109.5846ms
[debug]   Load.loadUnit(file:/C:/Users/jprut/Desktop/scala_programming_course/Week1/fireworks/, ...) took 17746.6477ms
[debug] Load.apply: load took 17750.2316ms
[debug] Load.apply: resolveProjects took 0.1884ms
[debug] Load.apply: finalTransforms took 48.7323ms
[debug] Load.apply: config.delegates took 0.5287ms
[debug] Load.apply: Def.make(settings)... took 1175.0661ms
[debug] Load.apply: structureIndex took 40.081ms
[debug] Load.apply: mkStreams took 0.0053ms
[info] set current project to effective-scala-fireworks (in build file:/C:/Users/jprut/Desktop/scala_programming_course/Week1/fireworks/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 50242 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 50242, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to effective-scala-fireworks (in build file:/C:/Users/jprut/Desktop/scala_programming_course/Week1/fireworks/)
[debug] > Exec(idea-shell, None, None)
